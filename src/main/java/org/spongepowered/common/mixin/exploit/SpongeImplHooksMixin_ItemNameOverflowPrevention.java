/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.common.mixin.exploit;

import net.minecraft.entity.player.ServerPlayerEntity;
import net.minecraft.item.ItemStack;
import net.minecraft.network.IPacket;
import net.minecraft.network.play.client.CCreativeInventoryActionPacket;
import net.minecraft.util.text.StringTextComponent;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Overwrite;
import org.spongepowered.common.SpongeImplHooks;
import org.spongepowered.common.util.SpongeHooks;

@Mixin(value = SpongeImplHooks.class, remap = false)
public class SpongeImplHooksMixin_ItemNameOverflowPrevention {

    /**
     * @author gabizou
     * @reason Overwrites our sanity check for catching an exploited item stack.
     * @return true if exploit detected
     */
    @Overwrite
    public static boolean creativeExploitCheck(final IPacket<?> packet, final ServerPlayerEntity playerMP) {
        if (!(packet instanceof CCreativeInventoryActionPacket)) {
            return false;
        }
        // Fix string overflow exploit in creative mode
        final CCreativeInventoryActionPacket creativePacket = (CCreativeInventoryActionPacket) packet;
        final ItemStack itemstack = creativePacket.getStack();
        if (!itemstack.isEmpty() && itemstack.getDisplayName().length() > 32767) {
            SpongeHooks.logExploitItemNameOverflow(playerMP, itemstack.getDisplayName().length());
            playerMP.connection.disconnect(new StringTextComponent("You have been kicked for attempting to perform an itemstack name overflow exploit."));
            return true;
        }
        return false;
    }

}
